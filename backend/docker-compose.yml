services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: erp-backend-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: erp_db
      POSTGRES_USER: erp_user
      POSTGRES_PASSWORD: erp_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend-network

  # Backend NestJS (development mode)
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp-backend-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://erp_user:erp_password@postgres:5432/erp_db
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - backend-network
    depends_on:
      - postgres
    command: yarn start:dev

  # Backend NestJS (production mode)
  backend-prod:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: erp-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://erp_user:erp_password@postgres:5432/erp_db
      PORT: 3001
    ports:
      - "3002:3001"
    networks:
      - backend-network
    depends_on:
      - postgres
    profiles:
      - production

volumes:
  postgres_data:

networks:
  backend-network:
    driver: bridge